// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id                  String    @id @default(cuid())
  name                String?
  email               String?   @unique
  emailVerified       DateTime? @map("email_verified")
  image               String?
  password            String?
  role                UserRole @default(USER)
  accounts            Account[]
  myLists             MyList[]

  @@map("users")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  id String @id @default (cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
  @@map("verification_tokens")
}

model PasswordResetToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
  @@map("password_reset_token")
}

model Music {
  id              String @id @default(cuid())
  name            String
  description     String
  image           String
  recentlyAddedItems   RecentlyAdded[]
  myLists MyList[]
}

model Sport {
  id              String @id @default(cuid())
  name            String
  description     String
  image           String
  recentlyAddedItems   RecentlyAdded[]
  myLists MyList[]
}

model RecentlyAdded {
  id          String @id @default(cuid())
  musicId     String @map("music_id")
  sportId     String @map("sport_id")
  createdAt   DateTime
  music Music @relation(fields: [musicId], references: [id], onDelete: Cascade)
  sport Sport @relation(fields: [sportId], references: [id], onDelete: Cascade)
}

model MyList {
  id          String @id @default(cuid())
  userId      String  @map("user_id")
  musicId     String @map("music_id")
  sportId     String @map("sport_id")
  createdAt   DateTime
  user        User    @relation(fields: [userId], references: [id])
  music       Music   @relation(fields: [musicId], references: [id], onDelete: Cascade)
  sport       Sport   @relation(fields: [sportId], references: [id], onDelete: Cascade)
}
